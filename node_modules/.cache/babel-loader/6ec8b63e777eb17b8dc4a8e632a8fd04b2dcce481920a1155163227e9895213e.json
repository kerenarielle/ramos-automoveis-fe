{"ast":null,"code":"export async function login(userData) {\n  try {\n    const response = await fetch('/api/auth', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Erro na requisição'); // Trate erros de resposta não-ok\n    }\n\n    const data = await response.json();\n    return {\n      data\n    };\n  } catch (error) {\n    throw new Error('Erro na requisição');\n  }\n}\nexport const defaults = {\n  headers: {\n    Authorization: ''\n  }\n};","map":{"version":3,"names":["login","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","defaults","Authorization"],"sources":["/Users/kerenarielle/Documents/projetos/ramos/frontend/src/services/api.ts"],"sourcesContent":["interface Response {\n  data: {\n    user: string;\n    token: string;\n  };\n}\n\nexport async function login(userData: object): Promise<Response> {\n  try {\n    const response = await fetch('/api/auth', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n      throw new Error('Erro na requisição'); // Trate erros de resposta não-ok\n    }\n\n    const data = await response.json() as Response;\n\n    return { data };\n  } catch (error) {\n    throw new Error('Erro na requisição');\n  }\n}\n\nexport const defaults = {\n  headers: {\n    Authorization: '',\n  },\n};"],"mappings":"AAOA,OAAO,eAAeA,KAAKA,CAACC,QAAgB,EAAqB;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACzC;;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAa;IAE9C,OAAO;MAAED;IAAK,CAAC;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIH,KAAK,CAAC,oBAAoB,CAAC;EACvC;AACF;AAEA,OAAO,MAAMI,QAAQ,GAAG;EACtBT,OAAO,EAAE;IACPU,aAAa,EAAE;EACjB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}