{"ast":null,"code":"var _jsxFileName = \"/Users/kerenarielle/Documents/projetos/ramos/frontend/src/components/InputPrice/index.tsx\";\nimport { TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { NumericFormat } from \"react-number-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumericFormatCustom = /*#__PURE__*/React.forwardRef(_c = function NumericFormatCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumericFormat, {\n    ...other,\n    getInputRef: ref,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: \".\",\n    decimalSeparator: \",\",\n    decimalScale: 2,\n    valueIsNumericString: true,\n    prefix: \"R$\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n});\n_c2 = NumericFormatCustom;\nconst InputPrice = _ref => {\n  let {\n    name,\n    label,\n    value,\n    validationSchema,\n    register,\n    errors,\n    type\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    error: !!errors[name],\n    defaultValue: value,\n    helperText: !errors[name] ? null : errors[name].message,\n    id: name,\n    type: type,\n    label: label,\n    InputProps: {\n      inputComponent: NumericFormatCustom\n    },\n    ...register(name, validationSchema)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n_c3 = InputPrice;\nexport default InputPrice;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NumericFormatCustom$React.forwardRef\");\n$RefreshReg$(_c2, \"NumericFormatCustom\");\n$RefreshReg$(_c3, \"InputPrice\");","map":{"version":3,"names":["TextField","React","NumericFormat","jsxDEV","_jsxDEV","NumericFormatCustom","forwardRef","_c","props","ref","onChange","other","getInputRef","onValueChange","values","target","name","value","thousandSeparator","decimalSeparator","decimalScale","valueIsNumericString","prefix","fileName","_jsxFileName","lineNumber","columnNumber","_c2","InputPrice","_ref","label","validationSchema","register","errors","type","error","defaultValue","helperText","message","id","InputProps","inputComponent","_c3","$RefreshReg$"],"sources":["/Users/kerenarielle/Documents/projetos/ramos/frontend/src/components/InputPrice/index.tsx"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport React, { FunctionComponent } from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ntype InputLabelProps = {\n  name: string;\n  label: string;\n  type: string;\n  value?: string;\n  errors: any;\n  register: any;\n  validationSchema: any;\n};\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst NumericFormatCustom = React.forwardRef<NumericFormatProps, CustomProps>(\n  function NumericFormatCustom(props, ref) {\n    const { onChange, ...other } = props;\n\n    return (\n      <NumericFormat\n        {...other}\n        getInputRef={ref}\n        onValueChange={(values: any) => {\n          onChange({\n            target: {\n              name: props.name,\n              value: values.value,\n            },\n          });\n        }}\n        thousandSeparator=\".\" \n        decimalSeparator=\",\"\n        decimalScale={2}\n        valueIsNumericString\n        prefix=\"R$\"\n      />\n    );\n  },\n);\n\nconst InputPrice: FunctionComponent<InputLabelProps> = ({ name, label, value, validationSchema, register, errors, type }) => (\n  <TextField\n    error={!!errors[name]}\n    defaultValue={value}\n    helperText={!errors[name] ? null : errors[name].message}\n    id={name}\n    type={type}\n    label={label}\n    InputProps={{\n      inputComponent: NumericFormatCustom as any,\n    }}\n    {...register(name, validationSchema)}\n  />\n);\n\nexport default InputPrice;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,OAAOC,KAAK,MAA6B,OAAO;AAChD,SAASC,aAAa,QAA4B,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBxE,MAAMC,mBAAmB,gBAAGJ,KAAK,CAACK,UAAU,CAAAC,EAAA,GAC1C,SAASF,mBAAmBA,CAACG,KAAK,EAAEC,GAAG,EAAE;EACvC,MAAM;IAAEC,QAAQ;IAAE,GAAGC;EAAM,CAAC,GAAGH,KAAK;EAEpC,oBACEJ,OAAA,CAACF,aAAa;IAAA,GACRS,KAAK;IACTC,WAAW,EAAEH,GAAI;IACjBI,aAAa,EAAGC,MAAW,IAAK;MAC9BJ,QAAQ,CAAC;QACPK,MAAM,EAAE;UACNC,IAAI,EAAER,KAAK,CAACQ,IAAI;UAChBC,KAAK,EAAEH,MAAM,CAACG;QAChB;MACF,CAAC,CAAC;IACJ,CAAE;IACFC,iBAAiB,EAAC,GAAG;IACrBC,gBAAgB,EAAC,GAAG;IACpBC,YAAY,EAAE,CAAE;IAChBC,oBAAoB;IACpBC,MAAM,EAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEN,CACF,CAAC;AAACC,GAAA,GAxBItB,mBAAmB;AA0BzB,MAAMuB,UAA8C,GAAGC,IAAA;EAAA,IAAC;IAAEb,IAAI;IAAEc,KAAK;IAAEb,KAAK;IAAEc,gBAAgB;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAAL,IAAA;EAAA,oBACtHzB,OAAA,CAACJ,SAAS;IACRmC,KAAK,EAAE,CAAC,CAACF,MAAM,CAACjB,IAAI,CAAE;IACtBoB,YAAY,EAAEnB,KAAM;IACpBoB,UAAU,EAAE,CAACJ,MAAM,CAACjB,IAAI,CAAC,GAAG,IAAI,GAAGiB,MAAM,CAACjB,IAAI,CAAC,CAACsB,OAAQ;IACxDC,EAAE,EAAEvB,IAAK;IACTkB,IAAI,EAAEA,IAAK;IACXJ,KAAK,EAAEA,KAAM;IACbU,UAAU,EAAE;MACVC,cAAc,EAAEpC;IAClB,CAAE;IAAA,GACE2B,QAAQ,CAAChB,IAAI,EAAEe,gBAAgB;EAAC;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAAA,CACH;AAACgB,GAAA,GAbId,UAA8C;AAepD,eAAeA,UAAU;AAAC,IAAArB,EAAA,EAAAoB,GAAA,EAAAe,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}